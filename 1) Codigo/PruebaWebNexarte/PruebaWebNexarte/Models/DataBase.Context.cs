//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebaWebNexarte.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PruebaNexarteEntities : DbContext
    {
        public PruebaNexarteEntities()
            : base("name=PruebaNexarteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LOG_CONSULTA_NOM_NOMINA_DEFINITIVA> LOG_CONSULTA_NOM_NOMINA_DEFINITIVA { get; set; }
        public virtual DbSet<NOM_CONCEPTOS_NOMINA> NOM_CONCEPTOS_NOMINA { get; set; }
        public virtual DbSet<NOM_EMPLEADOS> NOM_EMPLEADOS { get; set; }
        public virtual DbSet<NOM_NOMINA_DEFINITIVA> NOM_NOMINA_DEFINITIVA { get; set; }
        public virtual DbSet<REG_SOLICITUDES_INGRESOS> REG_SOLICITUDES_INGRESOS { get; set; }
    
        public virtual ObjectResult<USP_CONSULTA_NOMINA_POR_DOCUMENTO_Result> USP_CONSULTA_NOMINA_POR_DOCUMENTO(string dOC_IDENTIDAD, Nullable<decimal> evento, string usuario, Nullable<decimal> rEGISTRO_NOM_NOMINA_DEFINITIVA, Nullable<int> iD_CONCEPTO, Nullable<decimal> vAL_NOMINA, Nullable<int> cANTIDAD)
        {
            var dOC_IDENTIDADParameter = dOC_IDENTIDAD != null ?
                new ObjectParameter("DOC_IDENTIDAD", dOC_IDENTIDAD) :
                new ObjectParameter("DOC_IDENTIDAD", typeof(string));
    
            var eventoParameter = evento.HasValue ?
                new ObjectParameter("Evento", evento) :
                new ObjectParameter("Evento", typeof(decimal));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var rEGISTRO_NOM_NOMINA_DEFINITIVAParameter = rEGISTRO_NOM_NOMINA_DEFINITIVA.HasValue ?
                new ObjectParameter("REGISTRO_NOM_NOMINA_DEFINITIVA", rEGISTRO_NOM_NOMINA_DEFINITIVA) :
                new ObjectParameter("REGISTRO_NOM_NOMINA_DEFINITIVA", typeof(decimal));
    
            var iD_CONCEPTOParameter = iD_CONCEPTO.HasValue ?
                new ObjectParameter("ID_CONCEPTO", iD_CONCEPTO) :
                new ObjectParameter("ID_CONCEPTO", typeof(int));
    
            var vAL_NOMINAParameter = vAL_NOMINA.HasValue ?
                new ObjectParameter("VAL_NOMINA", vAL_NOMINA) :
                new ObjectParameter("VAL_NOMINA", typeof(decimal));
    
            var cANTIDADParameter = cANTIDAD.HasValue ?
                new ObjectParameter("CANTIDAD", cANTIDAD) :
                new ObjectParameter("CANTIDAD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CONSULTA_NOMINA_POR_DOCUMENTO_Result>("USP_CONSULTA_NOMINA_POR_DOCUMENTO", dOC_IDENTIDADParameter, eventoParameter, usuarioParameter, rEGISTRO_NOM_NOMINA_DEFINITIVAParameter, iD_CONCEPTOParameter, vAL_NOMINAParameter, cANTIDADParameter);
        }
    }
}
